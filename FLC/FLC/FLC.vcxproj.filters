<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup>
    <Filter Include="Source Files">
      <UniqueIdentifier>{4FC737F1-C7A5-4376-A066-2A32D752A2FF}</UniqueIdentifier>
      <Extensions>cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx</Extensions>
    </Filter>
    <Filter Include="Header Files">
      <UniqueIdentifier>{93995380-89BD-4b04-88EB-625FBE52EBFB}</UniqueIdentifier>
      <Extensions>h;hh;hpp;hxx;hm;inl;inc;xsd</Extensions>
    </Filter>
    <Filter Include="Resource Files">
      <UniqueIdentifier>{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}</UniqueIdentifier>
      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>
    </Filter>
    <Filter Include="Source Files\flc">
      <UniqueIdentifier>{b4c1df33-e808-42ac-a9c9-d81f17988973}</UniqueIdentifier>
    </Filter>
    <Filter Include="Source Files\flc\tokens">
      <UniqueIdentifier>{bbc80bf8-2df9-4c19-903b-d3942c12c41e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Header Files\flc">
      <UniqueIdentifier>{bab98271-a9b3-486d-b962-994c37f82850}</UniqueIdentifier>
    </Filter>
    <Filter Include="Header Files\flc\tokens">
      <UniqueIdentifier>{a9ec14f9-4b3e-48a3-a224-fa0b377ffd81}</UniqueIdentifier>
    </Filter>
    <Filter Include="Copy To Output">
      <UniqueIdentifier>{3ebe8308-5901-47e4-b4e2-75734696821d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Source Files\flc\syntax">
      <UniqueIdentifier>{df11b0f9-b8a8-458f-9510-0a78a4a57c78}</UniqueIdentifier>
    </Filter>
    <Filter Include="Header Files\flc\syntax">
      <UniqueIdentifier>{5188ef81-35fd-413e-b195-9f02a5ef5156}</UniqueIdentifier>
    </Filter>
    <Filter Include="Source Files\flc\syntax\factory">
      <UniqueIdentifier>{ed952475-9249-4873-b648-6a8f6f59098a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Header Files\flc\syntax\factory">
      <UniqueIdentifier>{aa5e4e23-dfdd-4436-ae87-4a4064191bb7}</UniqueIdentifier>
    </Filter>
    <Filter Include="Header Files\flc\types">
      <UniqueIdentifier>{d5f31722-014f-4538-ae54-64fd978ae7d4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Header Files\flc\asm">
      <UniqueIdentifier>{22735dfb-b1fc-4725-8a02-f5582d1f07fb}</UniqueIdentifier>
    </Filter>
    <Filter Include="Source Files\flc\asm">
      <UniqueIdentifier>{986222ea-7527-47b3-bb0a-63fc2e12249d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Source Files\flc\types">
      <UniqueIdentifier>{4190cd14-fe0f-4880-8426-c5e151eca973}</UniqueIdentifier>
    </Filter>
    <Filter Include="Source Files\flc\op">
      <UniqueIdentifier>{eb2e14df-93f6-4fd9-ac5f-f624e13b6ea1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Header Files\flc\op">
      <UniqueIdentifier>{40dfec4e-db5d-478f-bff9-dcc32ea299e8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Source Files\flc\types\predefined">
      <UniqueIdentifier>{789d4d0b-5761-48b6-ab7a-9ad2f8d367bd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Header Files\flc\types\predefined">
      <UniqueIdentifier>{54158b65-443e-4da1-8e19-b1d140f4cb31}</UniqueIdentifier>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="stdafx.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="targetver.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="CommandLineParser.h">
      <Filter>Header Files\flc</Filter>
    </ClInclude>
    <ClInclude Include="Compiler.h">
      <Filter>Header Files\flc</Filter>
    </ClInclude>
    <ClInclude Include="Token.h">
      <Filter>Header Files\flc\tokens</Filter>
    </ClInclude>
    <ClInclude Include="Tokenizer.h">
      <Filter>Header Files\flc\tokens</Filter>
    </ClInclude>
    <ClInclude Include="Errors.h">
      <Filter>Header Files\flc</Filter>
    </ClInclude>
    <ClInclude Include="IntegerLiteralToken.h">
      <Filter>Header Files\flc\tokens</Filter>
    </ClInclude>
    <ClInclude Include="FloatLiteralToken.h">
      <Filter>Header Files\flc\tokens</Filter>
    </ClInclude>
    <ClInclude Include="SymbolToken.h">
      <Filter>Header Files\flc\tokens</Filter>
    </ClInclude>
    <ClInclude Include="StringLiteralToken.h">
      <Filter>Header Files\flc\tokens</Filter>
    </ClInclude>
    <ClInclude Include="CharacterLiteralToken.h">
      <Filter>Header Files\flc\tokens</Filter>
    </ClInclude>
    <ClInclude Include="EndOfFileToken.h">
      <Filter>Header Files\flc\tokens</Filter>
    </ClInclude>
    <ClInclude Include="IdentifierToken.h">
      <Filter>Header Files\flc\tokens</Filter>
    </ClInclude>
    <ClInclude Include="KeywordToken.h">
      <Filter>Header Files\flc\tokens</Filter>
    </ClInclude>
    <ClInclude Include="BooleanLiteralToken.h">
      <Filter>Header Files\flc\tokens</Filter>
    </ClInclude>
    <ClInclude Include="NullLiteralToken.h">
      <Filter>Header Files\flc\tokens</Filter>
    </ClInclude>
    <ClInclude Include="ErrorToken.h">
      <Filter>Header Files\flc\tokens</Filter>
    </ClInclude>
    <ClInclude Include="MultiLineComment.h">
      <Filter>Header Files\flc\tokens</Filter>
    </ClInclude>
    <ClInclude Include="Comment.h">
      <Filter>Header Files\flc\tokens</Filter>
    </ClInclude>
    <ClInclude Include="SingleLineComment.h">
      <Filter>Header Files\flc\tokens</Filter>
    </ClInclude>
    <ClInclude Include="Syntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="ExpressionSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="MultiplicativeExpressionSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="AdditiveExpressionSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="UnaryExpressionSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="ExpressionSyntaxFactory.h">
      <Filter>Header Files\flc\syntax\factory</Filter>
    </ClInclude>
    <ClInclude Include="AdditiveExpressionSyntaxFactory.h">
      <Filter>Header Files\flc\syntax\factory</Filter>
    </ClInclude>
    <ClInclude Include="MultiplicativeExpressionSyntaxFactory.h">
      <Filter>Header Files\flc\syntax\factory</Filter>
    </ClInclude>
    <ClInclude Include="UnaryExpressionSyntaxFactory.h">
      <Filter>Header Files\flc\syntax\factory</Filter>
    </ClInclude>
    <ClInclude Include="TermSyntaxFactory.h">
      <Filter>Header Files\flc\syntax\factory</Filter>
    </ClInclude>
    <ClInclude Include="TernaryExpressionSyntaxFactory.h">
      <Filter>Header Files\flc\syntax\factory</Filter>
    </ClInclude>
    <ClInclude Include="ConditionalOrExpressionSyntaxFactory.h">
      <Filter>Header Files\flc\syntax\factory</Filter>
    </ClInclude>
    <ClInclude Include="ConditionalAndExpressionSyntaxFactory.h">
      <Filter>Header Files\flc\syntax\factory</Filter>
    </ClInclude>
    <ClInclude Include="InclusiveOrExpressionSyntaxFactory.h">
      <Filter>Header Files\flc\syntax\factory</Filter>
    </ClInclude>
    <ClInclude Include="ExclusiveOrExpressionSyntaxFactory.h">
      <Filter>Header Files\flc\syntax\factory</Filter>
    </ClInclude>
    <ClInclude Include="AndExpressionSyntaxFactory.h">
      <Filter>Header Files\flc\syntax\factory</Filter>
    </ClInclude>
    <ClInclude Include="EqualityExpressionSyntaxFactory.h">
      <Filter>Header Files\flc\syntax\factory</Filter>
    </ClInclude>
    <ClInclude Include="RelationalExpressionSyntaxFactory.h">
      <Filter>Header Files\flc\syntax\factory</Filter>
    </ClInclude>
    <ClInclude Include="ShiftExpressionSyntaxFactory.h">
      <Filter>Header Files\flc\syntax\factory</Filter>
    </ClInclude>
    <ClInclude Include="TernaryExpressionSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="ConditionalOrExpressionSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="ConditionalAndExpressionSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="InclusiveOrExpressionSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="ExclusiveOrExpressionSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="AndExpressionSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="EqualityExpressionSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="RelationalExpressionSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="ShiftExpressionSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="CompoundExpressionSyntaxFactory.h">
      <Filter>Header Files\flc\syntax\factory</Filter>
    </ClInclude>
    <ClInclude Include="CompoundExpressionSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="NullLiteralSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="StringLiteralSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="BooleanLiteralSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="CharacterLiteralSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="IntegerLiteralSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="FloatLiteralSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="SimpleNameSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="ComplexNameSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="MemberAccessExpressionSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="AssignmentExpressionSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="IfExpressionSyntaxFactory.h">
      <Filter>Header Files\flc\syntax\factory</Filter>
    </ClInclude>
    <ClInclude Include="IfExpressionSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="WhileExpressionSyntaxFactory.h">
      <Filter>Header Files\flc\syntax\factory</Filter>
    </ClInclude>
    <ClInclude Include="WhileExpressionSyntax.h">
      <Filter>Header Files\flc\syntax</Filter>
    </ClInclude>
    <ClInclude Include="RuntimeType.h">
      <Filter>Header Files\flc\types</Filter>
    </ClInclude>
    <ClInclude Include="resource.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="INameResolutionContext.h">
      <Filter>Header Files\flc\types</Filter>
    </ClInclude>
    <ClInclude Include="INameInfo.h">
      <Filter>Header Files\flc\types</Filter>
    </ClInclude>
    <ClInclude Include="NameType.h">
      <Filter>Header Files\flc\types</Filter>
    </ClInclude>
    <ClInclude Include="Int32.h">
      <Filter>Header Files\flc\types\predefined</Filter>
    </ClInclude>
    <ClInclude Include="Int64.h">
      <Filter>Header Files\flc\types\predefined</Filter>
    </ClInclude>
    <ClInclude Include="UInt32.h">
      <Filter>Header Files\flc\types\predefined</Filter>
    </ClInclude>
    <ClInclude Include="UInt64.h">
      <Filter>Header Files\flc\types\predefined</Filter>
    </ClInclude>
    <ClInclude Include="Double.h">
      <Filter>Header Files\flc\types\predefined</Filter>
    </ClInclude>
    <ClInclude Include="Float.h">
      <Filter>Header Files\flc\types\predefined</Filter>
    </ClInclude>
    <ClInclude Include="String.h">
      <Filter>Header Files\flc\types\predefined</Filter>
    </ClInclude>
    <ClInclude Include="Boolean.h">
      <Filter>Header Files\flc\types\predefined</Filter>
    </ClInclude>
    <ClInclude Include="Void.h">
      <Filter>Header Files\flc\types\predefined</Filter>
    </ClInclude>
    <ClInclude Include="Int16.h">
      <Filter>Header Files\flc\types\predefined</Filter>
    </ClInclude>
    <ClInclude Include="Int8.h">
      <Filter>Header Files\flc\types\predefined</Filter>
    </ClInclude>
    <ClInclude Include="UInt8.h">
      <Filter>Header Files\flc\types\predefined</Filter>
    </ClInclude>
    <ClInclude Include="UInt16.h">
      <Filter>Header Files\flc\types\predefined</Filter>
    </ClInclude>
    <ClInclude Include="Char.h">
      <Filter>Header Files\flc\types\predefined</Filter>
    </ClInclude>
    <ClInclude Include="Object.h">
      <Filter>Header Files\flc\types\predefined</Filter>
    </ClInclude>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="stdafx.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="FLC.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="CommandLineParser.cpp">
      <Filter>Source Files\flc</Filter>
    </ClCompile>
    <ClCompile Include="Compiler.cpp">
      <Filter>Source Files\flc</Filter>
    </ClCompile>
    <ClCompile Include="Tokenizer.cpp">
      <Filter>Source Files\flc\tokens</Filter>
    </ClCompile>
    <ClCompile Include="Token.cpp">
      <Filter>Source Files\flc\tokens</Filter>
    </ClCompile>
    <ClCompile Include="Errors.cpp">
      <Filter>Source Files\flc</Filter>
    </ClCompile>
    <ClCompile Include="IntegerLiteralToken.cpp">
      <Filter>Source Files\flc\tokens</Filter>
    </ClCompile>
    <ClCompile Include="FloatLiteralToken.cpp">
      <Filter>Source Files\flc\tokens</Filter>
    </ClCompile>
    <ClCompile Include="SymbolToken.cpp">
      <Filter>Source Files\flc\tokens</Filter>
    </ClCompile>
    <ClCompile Include="StringLiteralToken.cpp">
      <Filter>Source Files\flc\tokens</Filter>
    </ClCompile>
    <ClCompile Include="CharacterLiteralToken.cpp">
      <Filter>Source Files\flc\tokens</Filter>
    </ClCompile>
    <ClCompile Include="EndOfFileToken.cpp">
      <Filter>Source Files\flc\tokens</Filter>
    </ClCompile>
    <ClCompile Include="IdentifierToken.cpp">
      <Filter>Source Files\flc\tokens</Filter>
    </ClCompile>
    <ClCompile Include="KeywordToken.cpp">
      <Filter>Source Files\flc\tokens</Filter>
    </ClCompile>
    <ClCompile Include="NullLiteralToken.cpp">
      <Filter>Source Files\flc\tokens</Filter>
    </ClCompile>
    <ClCompile Include="BooleanLiteralToken.cpp">
      <Filter>Source Files\flc\tokens</Filter>
    </ClCompile>
    <ClCompile Include="ErrorToken.cpp">
      <Filter>Source Files\flc\tokens</Filter>
    </ClCompile>
    <ClCompile Include="MultiLineComment.cpp">
      <Filter>Source Files\flc\tokens</Filter>
    </ClCompile>
    <ClCompile Include="SingleLineComment.cpp">
      <Filter>Source Files\flc\tokens</Filter>
    </ClCompile>
    <ClCompile Include="Comment.cpp">
      <Filter>Source Files\flc\tokens</Filter>
    </ClCompile>
    <ClCompile Include="Syntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="ExpressionSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="AdditiveExpressionSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="MultiplicativeExpressionSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="UnaryExpressionSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="ExpressionSyntaxFactory.cpp">
      <Filter>Source Files\flc\syntax\factory</Filter>
    </ClCompile>
    <ClCompile Include="AdditiveExpressionSyntaxFactory.cpp">
      <Filter>Source Files\flc\syntax\factory</Filter>
    </ClCompile>
    <ClCompile Include="MultiplicativeExpressionSyntaxFactory.cpp">
      <Filter>Source Files\flc\syntax\factory</Filter>
    </ClCompile>
    <ClCompile Include="UnaryExpressionSyntaxFactory.cpp">
      <Filter>Source Files\flc\syntax\factory</Filter>
    </ClCompile>
    <ClCompile Include="TermSyntaxFactory.cpp">
      <Filter>Source Files\flc\syntax\factory</Filter>
    </ClCompile>
    <ClCompile Include="TernaryExpressionSyntaxFactory.cpp">
      <Filter>Source Files\flc\syntax\factory</Filter>
    </ClCompile>
    <ClCompile Include="ConditionalOrExpressionSyntaxFactory.cpp">
      <Filter>Source Files\flc\syntax\factory</Filter>
    </ClCompile>
    <ClCompile Include="ConditionalAndExpressionSyntaxFactory.cpp">
      <Filter>Source Files\flc\syntax\factory</Filter>
    </ClCompile>
    <ClCompile Include="InclusiveOrExpressionSyntaxFactory.cpp">
      <Filter>Source Files\flc\syntax\factory</Filter>
    </ClCompile>
    <ClCompile Include="ExclusiveOrExpressionSyntaxFactory.cpp">
      <Filter>Source Files\flc\syntax\factory</Filter>
    </ClCompile>
    <ClCompile Include="AndExpressionSyntaxFactory.cpp">
      <Filter>Source Files\flc\syntax\factory</Filter>
    </ClCompile>
    <ClCompile Include="EqualityExpressionSyntaxFactory.cpp">
      <Filter>Source Files\flc\syntax\factory</Filter>
    </ClCompile>
    <ClCompile Include="RelationalExpressionSyntaxFactory.cpp">
      <Filter>Source Files\flc\syntax\factory</Filter>
    </ClCompile>
    <ClCompile Include="ShiftExpressionSyntaxFactory.cpp">
      <Filter>Source Files\flc\syntax\factory</Filter>
    </ClCompile>
    <ClCompile Include="TernaryExpressionSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="ConditionalOrExpressionSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="ConditionalAndExpressionSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="InclusiveOrExpressionSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="ExclusiveOrExpressionSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="AndExpressionSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="EqualityExpressionSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="RelationalExpressionSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="ShiftExpressionSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="CompoundExpressionSyntaxFactory.cpp">
      <Filter>Source Files\flc\syntax\factory</Filter>
    </ClCompile>
    <ClCompile Include="CompoundExpressionSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="StringLiteralSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="CharacterLiteralSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="IntegerLiteralSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="FloatLiteralSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="BooleanLiteralSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="NullLiteralSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="SimpleNameSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="ComplexNameSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="MemberAccessExpressionSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="AssignmentExpressionSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="IfExpressionSyntaxFactory.cpp">
      <Filter>Source Files\flc\syntax\factory</Filter>
    </ClCompile>
    <ClCompile Include="IfExpressionSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="WhileExpressionSyntaxFactory.cpp">
      <Filter>Source Files\flc\syntax\factory</Filter>
    </ClCompile>
    <ClCompile Include="WhileExpressionSyntax.cpp">
      <Filter>Source Files\flc\syntax</Filter>
    </ClCompile>
    <ClCompile Include="RuntimeType.cpp">
      <Filter>Source Files\flc\types</Filter>
    </ClCompile>
    <ClCompile Include="INameInfo.cpp">
      <Filter>Source Files\flc\types</Filter>
    </ClCompile>
    <ClCompile Include="Int32.cpp">
      <Filter>Source Files\flc\types\predefined</Filter>
    </ClCompile>
    <ClCompile Include="Int64.cpp">
      <Filter>Source Files\flc\types\predefined</Filter>
    </ClCompile>
    <ClCompile Include="Float.cpp">
      <Filter>Source Files\flc\types\predefined</Filter>
    </ClCompile>
    <ClCompile Include="Double.cpp">
      <Filter>Source Files\flc\types\predefined</Filter>
    </ClCompile>
    <ClCompile Include="String.cpp">
      <Filter>Source Files\flc\types\predefined</Filter>
    </ClCompile>
    <ClCompile Include="UInt32.cpp">
      <Filter>Source Files\flc\types\predefined</Filter>
    </ClCompile>
    <ClCompile Include="UInt64.cpp">
      <Filter>Source Files\flc\types\predefined</Filter>
    </ClCompile>
    <ClCompile Include="Char.cpp">
      <Filter>Source Files\flc\types\predefined</Filter>
    </ClCompile>
    <ClCompile Include="Void.cpp">
      <Filter>Source Files\flc\types\predefined</Filter>
    </ClCompile>
    <ClCompile Include="Int16.cpp">
      <Filter>Source Files\flc\types\predefined</Filter>
    </ClCompile>
    <ClCompile Include="Int8.cpp">
      <Filter>Source Files\flc\types\predefined</Filter>
    </ClCompile>
    <ClCompile Include="UInt8.cpp">
      <Filter>Source Files\flc\types\predefined</Filter>
    </ClCompile>
    <ClCompile Include="UInt16.cpp">
      <Filter>Source Files\flc\types\predefined</Filter>
    </ClCompile>
    <ClCompile Include="Object.cpp">
      <Filter>Source Files\flc\types\predefined</Filter>
    </ClCompile>
    <ClCompile Include="Boolean.cpp">
      <Filter>Source Files\flc\types\predefined</Filter>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <None Include="test.fl">
      <Filter>Copy To Output</Filter>
    </None>
  </ItemGroup>
</Project>